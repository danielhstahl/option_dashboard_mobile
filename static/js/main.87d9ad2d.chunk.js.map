{"version":3,"sources":["Actions/calibrator.js","globals/utils.js","Services/urlUtils.js","Themes/inputFields.js","Components/utils/LoadData.js","Actions/constants.js","utils.js","globals/progressStyles.js","globals/constants.js","Components/utils/ProgressBar.js","Components/Screen1/SelectTicker.js","Actions/inputs.js","Actions/options.js","Components/Screen1/SelectMaturity.js","Components/Screen1/ButtonToScreen2.js","Components/Screen1/index.js","globals/chartStyles.js","Components/Screen2/SplineChart.js","Components/utils/WarningNoValues.js","Components/Screen2/MarketValueTable.js","Components/Screen2/ButtonToCalibrate.js","Components/Screen2/CalibratedValueTable.js","Components/Screen2/ButtonToScreen3.js","Components/Screen2/index.js","Actions/pricer.js","Services/inputHandler.js","Components/Screen3/PutCallChart.js","Components/Screen3/DensityChart.js","Components/Screen3/ImpliedVolatilityChart.js","Components/Screen3/index.js","App.js","registerServiceWorker.js","Reducers/inputs.js","Reducers/marketValues.js","Reducers/calibratorValues.js","Reducers/pricerValues.js","Reducers/loading.js","Reducers/index.js","Themes/index.js","index.js"],"names":["calibration","progressSize","baseUrl","pFetch","endpoint","body","fetch","params","method","JSON","stringify","then","res","json","gFetch","getBaseUrl","match","path","split","inputFieldTheme","theme","inputField","margin","spacing","unit","width","LoadData","this","props","onLoad","children","Component","calibrateModel","dispatch","type","value","parameters","optimal_parameters","mse","fn_result","finally","checkIsNative","window","screen","isEmpty","obj","key","hasOwnProperty","getAboveEpsilon","epsilon","arr","filter","v","getSymmetricFromRight","xKey","yKey","length","condArr","eps","lastXVal","outerStyleInline","position","outerStyleStandalone","minHeight","progressStyle","marginTop","marginLeft","top","left","ProgressBar","loading","rest","color","native","SelectTicker","withStyles","onChange","loadingTicker","options","classes","style","size","className","htmlFor","inputProps","name","id","map","option","Symbol","Name","propTypes","PropTypes","func","isRequired","string","bool","arrayOf","shape","tickerChange","ticker","inputTicker","optionFeaturesGet","features","maturities","expirationDates","getOptionFeatures","event","target","tickers","getTickers","constraints","getCalibrationBounds","connect","inputs","marketValues","SelectMaturity","date","Date","optionStr","toString","toLocaleDateString","maturityChange","maturity","selectMaturity","splineChange","curve","points","attributes","spline","getSpline","loadingMaturity","nextTabLink","variant","component","Link","to","SetupScreen","fluid","xs","animateStyle","duration","containerStyle","touchAction","titleStyle","x","y","SplineChart","withTheme","loadingSpline","animate","containerComponent","data","stroke","palette","primary","main","interpolation","secondary","log_strike","number","transformed_option","calibratorValues","splineChart","WarningNoValues","links","gutterBottom","label","reduce","aggr","curr","Array","isArray","asset","toFixed","rate","loadingCalibrate","calibrate","onClick","checkRequiredFields","disabled","calibrated","Object","entries","marginBottom","CalibrationScreen","mapTypeToAction","call","put","getPricesAndIV","sensitivity","results","iv","handleIV","getPut","getCall","gDensity","densityType","getDensity","getRiskMetrics","PutCallChart","strikes","prices","loadingPutCall","scatter","index","strike","price","centerTitle","title","symbol","fill","legendData","orientation","pricerValues","putCallIVChart","getVaR","riskMetrics","density","value_at_risk","cur","Number","NEGATIVE_INFINITY","DensityChart","loadingDensity","text","expected_shortfall","at_point","densityChart","ImpliedVolatilityChart","impliedVolatility","loadingIV","sensitivities","handleChange","history","updateOptions","_","push","SensitivityNav","findIndex","fullWidth","getP","getC","getD","getR","objToSend","AppBarInst","parseInt","tabId","App","Switch","Redirect","from","exact","Route","render","Screen1","Screen2","Screen3","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","combineReducers","action","getOnlyAboveZero","attributesToCalibrate","defaultAttributes","num_u","quantile","rBoiler","defaultState","loadingGenerator","indigo","amber","store","createStore","reducer","createMuiTheme","defaultTheme","ReactDOM","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.87d9ad2d.chunk.js","sourcesContent":["/**\n * https://sgvzefbvu0.execute-api.us-east-1.amazonaws.com/dev/calibrator/{calibration} (POST)\n */\nimport { pFetch, gFetch } from 'Services/urlUtils'\nimport {\n  CALIBRATED_PARAMETERS,\n  CONSTRAINTS,\n  LOADING_CALIBRATE\n} from './constants'\nconst gCalibrate = calibration => dispatch => body => {\n  dispatch({\n    type: LOADING_CALIBRATE,\n    value: true\n  })\n  return pFetch(`calibrator/${calibration}`, body)\n    .then(parameters => {\n      return dispatch({\n        type: CALIBRATED_PARAMETERS,\n        parameters: {\n          ...parameters.optimal_parameters,\n          mse: parameters.fn_result\n        }\n      })\n    })\n    .finally(() => {\n      dispatch({\n        type: LOADING_CALIBRATE,\n        value: false\n      })\n    })\n}\n\nexport const getCalibrationBounds = dispatch =>\n  gFetch('parameters/parameter_ranges').then(constraints =>\n    dispatch({\n      type: CONSTRAINTS,\n      constraints\n    })\n  )\n\nexport const calibrateModel = gCalibrate('calibrate')\n","//https://coderwall.com/p/_g3x9q/how-to-check-if-javascript-object-is-empty\nexport const isEmpty = obj => {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false\n  }\n  return true\n}\n\nexport const getAboveEpsilon = epsilon => (arr, key) =>\n  arr.filter(v => v[key] > epsilon)\n\nexport const getSymmetricFromRight = (xKey, yKey, arr, epsilon) => {\n  if (arr.length === 0) {\n    return arr\n  }\n  const eps = getAboveEpsilon(epsilon)\n  const condArr = eps(arr, yKey)\n  const lastXVal = condArr[condArr.length - 1][xKey]\n  return arr.filter(\n    v => v[xKey] >= -lastXVal && (v[yKey] > epsilon || v[xKey] < 0)\n  )\n}\n\nexport const progressStyleGenerator = progressSize => ({\n  marginTop: -progressSize / 2,\n  marginLeft: -progressSize / 2,\n  top: '50%',\n  left: '50%',\n  position: 'absolute'\n})\n","const baseUrl =\n  process.env.NODE_ENV === 'production' ||\n  process.env.REACT_APP_CUST === 'production'\n    ? 'https://sgvzefbvu0.execute-api.us-east-1.amazonaws.com/dev/'\n    : '/'\n\nconst createBody = params => ({\n  method: 'post',\n  body: JSON.stringify(params)\n})\n\nexport const pFetch = (endpoint, body) =>\n  fetch(baseUrl + endpoint, createBody(body)).then(res => res.json())\n\nexport const gFetch = endpoint =>\n  fetch(baseUrl + endpoint).then(res => res.json())\n\nexport const getBaseUrl = match => match.path.split(':')[0]\n","export const inputFieldTheme = theme => ({\n  inputField: {\n    margin: theme.spacing.unit,\n    width: '100%'\n  }\n})\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\nclass LoadData extends Component {\n  componentDidMount() {\n    const { onLoad, children, ...rest } = this.props\n    onLoad(rest)\n  }\n  render() {\n    return this.props.children\n  }\n}\n\nLoadData.propTypes = {\n  onLoad: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired\n}\n\nexport default LoadData\n","export const OPTION_MATURITIES = 'OPTION_MATURITIES'\nexport const TICKER_VALUE = 'TICKER_VALUE'\nexport const MATURITY_VALUE = 'MATURITY_VALUE'\nexport const TICKERS = 'TICKERS'\nexport const SPLINE = 'SPLINE'\nexport const MARKET_VALUES = 'MARKET_VALUES'\nexport const CONSTRAINTS = 'CONSTRAINTS'\nexport const CUSTOM_CONSTRAINTS = 'CUSTOM_CONSTRAINTS'\nexport const CALIBRATED_PARAMETERS = 'CALIBRATED_PARAMETERS'\nexport const RISK_METRICS = 'RISK_METRICS'\nexport const DENSITY = 'DENSITY'\nexport const CALL = 'CALL'\nexport const PUT = 'PUT'\nexport const IV = 'IV'\nexport const LOADING_MATURITY = 'LOADING_MATURITY'\nexport const LOADING_TICKER = 'LOADING_TICKER'\nexport const LOADING_CALIBRATE = 'LOADING_CALIBRATE'\nexport const LOADING_DENSITY_CHART = 'LOADING_DENSITY_CHART'\nexport const LOADING_PUT_CALL_IV_CHART = 'LOADING_PUT_CALL_IV_CHART'\nexport const LOADING_SPLINE = 'LOADING_SPLINE'\n","export const checkIsNative = () => window.screen.width < 800\n","import { progressStyleGenerator } from 'globals/utils'\nimport { CHART_MIN_HEIGHT } from 'globals/constants'\n\nexport const PROGRESS_SIZE = 36\nexport const outerStyleInline = { position: 'relative' }\nexport const outerStyleStandalone = {\n  ...outerStyleInline,\n  minHeight: CHART_MIN_HEIGHT\n}\nexport const progressStyle = progressStyleGenerator(PROGRESS_SIZE)\n","export const FIXED_DECIMALS = 4\nexport const ANIMATION_DURATION = 500\nexport const CHART_MIN_HEIGHT = 200\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport PropTypes from 'prop-types'\n\nconst ProgressBar = ({ loading, ...rest }) =>\n  loading && <CircularProgress color=\"secondary\" {...rest} />\nProgressBar.propTypes = {\n  loading: PropTypes.bool.isRequired\n}\nexport default ProgressBar\n","import React from 'react'\nimport Select from '@material-ui/core/Select'\nimport { connect } from 'react-redux'\nimport { inputTicker } from 'Actions/inputs'\nimport { getTickers, getOptionFeatures } from 'Actions/options'\nimport FormControl from '@material-ui/core/FormControl'\nimport { inputFieldTheme } from 'Themes/inputFields'\nimport { withStyles } from '@material-ui/core/styles'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport LoadData from '../utils/LoadData'\nimport { getCalibrationBounds } from 'Actions/calibrator'\nimport { checkIsNative } from 'utils'\n\nimport {\n  outerStyleInline,\n  progressStyle,\n  PROGRESS_SIZE\n} from 'globals/progressStyles'\nimport ProgressBar from 'Components/utils/ProgressBar'\nimport PropTypes from 'prop-types'\nconst native = checkIsNative()\n//export for testing\nexport const SelectTicker = withStyles(inputFieldTheme)(\n  ({ onChange, value, onLoad, loadingTicker, options, classes }) => (\n    <LoadData onLoad={onLoad}>\n      {loadingTicker ? (\n        <div style={outerStyleInline}>\n          <ProgressBar\n            size={PROGRESS_SIZE}\n            style={progressStyle}\n            loading={loadingTicker}\n          />\n        </div>\n      ) : (\n        <FormControl className={classes.inputField}>\n          <InputLabel htmlFor=\"ticker-helper\">Stock Ticker</InputLabel>\n          <Select\n            native={native}\n            value={value}\n            onChange={onChange}\n            inputProps={{\n              name: 'ticker',\n              id: 'ticker-simple'\n            }}\n          >\n            <option value=\"\" key=\"none\" />\n            {options.map(option => (\n              <option key={option.Symbol} value={option.Symbol}>\n                {option.Name}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n      )}\n    </LoadData>\n  )\n)\n\nSelectTicker.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  onLoad: PropTypes.func.isRequired,\n  loadingTicker: PropTypes.bool.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      Symbol: PropTypes.string.isRequired,\n      Name: PropTypes.string.isRequired\n    })\n  ),\n  classes: PropTypes.shape({\n    inputField: PropTypes.string.isRequired\n  })\n}\n\nconst mapStateToProps = ({ inputs, marketValues, loading }) => ({\n  value: inputs.ticker,\n  options: marketValues.tickers,\n  loadingTicker: loading.ticker\n})\n\nconst onChange = dispatch => {\n  const tickerChange = inputTicker(dispatch)\n  const optionFeaturesGet = getOptionFeatures(dispatch)\n  return event => {\n    const ticker = event.target.value\n    tickerChange(ticker)\n    optionFeaturesGet(ticker)\n  }\n}\nconst onLoad = dispatch => () => {\n  getTickers(dispatch)\n  getCalibrationBounds(dispatch)\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: onChange(dispatch),\n  onLoad: onLoad(dispatch)\n})\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectTicker)\n","import { TICKER_VALUE, MATURITY_VALUE } from './constants'\n\nexport const inputTicker = dispatch => ticker =>\n  dispatch({\n    type: TICKER_VALUE,\n    ticker\n  })\nexport const selectMaturity = dispatch => maturity =>\n  dispatch({\n    type: MATURITY_VALUE,\n    maturity\n  })\n","/**\n * https://sgvzefbvu0.execute-api.us-east-1.amazonaws.com/dev/options/{ticker}/maturities (GET\n * https://sgvzefbvu0.execute-api.us-east-1.amazonaws.com/dev/options/{ticker}/prices/{asOfDate} (GET)\n * */\n\nimport { gFetch } from 'Services/urlUtils'\nimport {\n  OPTION_MATURITIES,\n  TICKERS,\n  SPLINE,\n  MARKET_VALUES,\n  LOADING_MATURITY,\n  LOADING_TICKER,\n  LOADING_SPLINE\n} from './constants'\n\nexport const getOptionFeatures = dispatch => ticker => {\n  dispatch({\n    type: LOADING_MATURITY,\n    value: true\n  })\n  gFetch(`options/${ticker}/maturities`)\n    .then(features => {\n      dispatch({\n        type: OPTION_MATURITIES,\n        maturities: features.expirationDates\n      })\n    })\n    .finally(() =>\n      dispatch({\n        type: LOADING_MATURITY,\n        value: false\n      })\n    )\n}\n\nexport const getTickers = dispatch => {\n  dispatch({\n    type: LOADING_TICKER,\n    value: true\n  })\n  gFetch('options/tickers')\n    .then(tickers =>\n      dispatch({\n        type: TICKERS,\n        tickers\n      })\n    )\n    .finally(() =>\n      dispatch({\n        type: LOADING_TICKER,\n        value: false\n      })\n    )\n}\n\nexport const getSpline = dispatch => (ticker, maturity) => {\n  dispatch({\n    type: LOADING_SPLINE,\n    value: true\n  })\n  gFetch(\n    `options/${ticker}/prices/${maturity}?minRelativeBidAskSpread=.1&minOpenInterest=25`\n  )\n    .then(({ curve, points, ...attributes }) => {\n      dispatch({\n        type: SPLINE,\n        spline: { curve, points }\n      })\n      dispatch({\n        type: MARKET_VALUES,\n        attributes\n      })\n    })\n    .finally(() => {\n      dispatch({\n        type: LOADING_SPLINE,\n        value: false\n      })\n    })\n}\n","import React from 'react'\nimport Select from '@material-ui/core/Select'\nimport FormControl from '@material-ui/core/FormControl'\nimport { connect } from 'react-redux'\nimport { selectMaturity } from 'Actions/inputs'\nimport { inputFieldTheme } from 'Themes/inputFields'\nimport { withStyles } from '@material-ui/core/styles'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport { getSpline } from 'Actions/options'\nimport PropTypes from 'prop-types'\nimport { checkIsNative } from 'utils'\nconst native = checkIsNative()\n//export for testing\nexport const SelectMaturity = withStyles(inputFieldTheme)(\n  ({ value, options, ticker, onChange, classes }) =>\n    options.length > 0 ? (\n      <FormControl className={classes.inputField}>\n        <InputLabel htmlFor=\"ticker-helper\">Option Maturity</InputLabel>\n        <Select\n          native={native}\n          value={value}\n          onChange={onChange(ticker)}\n          inputProps={{\n            name: 'maturity',\n            id: 'maturity-simple'\n          }}\n        >\n          <option value=\"\" key=\"none\" />\n          {options.map(option => {\n            const date = new Date(option)\n            const optionStr = option.toString()\n            return (\n              <option key={optionStr} value={optionStr}>\n                {date.toLocaleDateString()}\n              </option>\n            )\n          })}\n        </Select>\n      </FormControl>\n    ) : null\n)\nSelectMaturity.propTypes = {\n  value: PropTypes.string.isRequired, //is this a string or a number?\n  options: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired, //empty array is ok?\n  onChange: PropTypes.func.isRequired,\n  classes: PropTypes.shape({\n    inputField: PropTypes.string.isRequired\n  }),\n  ticker: PropTypes.string.isRequired\n}\nconst mapStateToProps = ({ marketValues, inputs }) => ({\n  value: inputs.maturity,\n  ticker: inputs.ticker,\n  options: marketValues.maturities\n})\nconst onChange = dispatch => {\n  const maturityChange = selectMaturity(dispatch)\n  const splineChange = getSpline(dispatch)\n  return ticker => event => {\n    const maturity = event.target.value\n    maturityChange(maturity)\n    splineChange(ticker, maturity)\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: onChange(dispatch)\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectMaturity)\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport ProgressBar from 'Components/utils/ProgressBar'\nimport PropTypes from 'prop-types'\nimport {\n  outerStyleInline,\n  progressStyle,\n  PROGRESS_SIZE\n} from 'globals/progressStyles'\n\n//export for testing\nexport const ButtonToScreen2 = ({ nextTabLink, maturity, loadingMaturity }) =>\n  maturity ? (\n    <Button\n      color=\"secondary\"\n      variant=\"contained\"\n      component={Link}\n      to={nextTabLink}\n    >\n      View Results\n    </Button>\n  ) : (\n    <div style={outerStyleInline}>\n      <ProgressBar\n        size={PROGRESS_SIZE}\n        style={progressStyle}\n        loading={loadingMaturity}\n      />\n    </div>\n  )\n\nButtonToScreen2.propTypes = {\n  nextTabLink: PropTypes.string.isRequired,\n  maturity: PropTypes.string.isRequired,\n  loadingMaturity: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = ({ inputs, loading }) => ({\n  maturity: inputs.maturity,\n  loadingMaturity: loading.maturity\n})\n\nexport default connect(mapStateToProps)(ButtonToScreen2)\n","import React from 'react'\nimport { Grid, Row, Col } from 'react-flexbox-grid'\nimport SelectTicker from './SelectTicker'\nimport SelectMaturity from './SelectMaturity'\nimport ButtonNext from './ButtonToScreen2'\nconst SetupScreen = () => (\n  <Grid fluid>\n    <Row>\n      <Col xs={12}>\n        <p>\n          {' '}\n          This app calibrates and prices options using a general jump-diffusion\n          with stochastic clock correlated with the diffusion component of the\n          asset.{' '}\n        </p>\n        <p>Step 1: Select Fortune 500 Company!</p>\n        <SelectTicker />\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={12}>\n        <p>Step 2: Select Option Maturity!</p>\n        <SelectMaturity />\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={12}>\n        <ButtonNext nextTabLink=\"/tab/2\" />\n      </Col>\n    </Row>\n  </Grid>\n)\n\nexport default SetupScreen\n","import { ANIMATION_DURATION } from 'globals/constants'\nexport const animateStyle = {\n  duration: 0.0,\n  onLoad: { duration: ANIMATION_DURATION }\n}\nexport const containerStyle = { touchAction: 'auto' }\nexport const titleStyle = { x: 100, y: 50 }\n","import React from 'react'\nimport {\n  VictoryChart,\n  VictoryLine,\n  VictoryContainer,\n  VictoryScatter\n} from 'victory'\nimport { withTheme } from '@material-ui/core/styles'\nimport ProgressBar from 'Components/utils/ProgressBar'\nimport { connect } from 'react-redux'\nimport { containerStyle, animateStyle } from 'globals/chartStyles'\nimport {\n  outerStyleStandalone,\n  progressStyle,\n  PROGRESS_SIZE\n} from 'globals/progressStyles'\nimport PropTypes from 'prop-types'\n\n//exported for testing\nexport const SplineChart = withTheme()(\n  ({ spline, theme, loadingSpline }) =>\n    spline.curve ? (\n      <VictoryChart\n        animate={animateStyle}\n        containerComponent={<VictoryContainer style={containerStyle} />}\n      >\n        <VictoryLine\n          style={{ data: { stroke: theme.palette.primary.main } }}\n          data={spline.curve}\n          x=\"log_strike\"\n          interpolation=\"natural\"\n          y=\"transformed_option\"\n        />\n        <VictoryScatter\n          style={{ data: { stroke: theme.palette.secondary.main } }}\n          data={spline.points}\n          x=\"log_strike\"\n          interpolation=\"natural\"\n          y=\"transformed_option\"\n        />\n      </VictoryChart>\n    ) : (\n      <div style={outerStyleStandalone}>\n        <ProgressBar\n          loading={loadingSpline}\n          style={progressStyle}\n          size={PROGRESS_SIZE}\n        />\n      </div>\n    )\n)\nSplineChart.propTypes = {\n  spline: PropTypes.shape({\n    curve: PropTypes.arrayOf(\n      PropTypes.shape({\n        log_strike: PropTypes.number.isRequired,\n        transformed_option: PropTypes.number.isRequired\n      })\n    ),\n    points: PropTypes.arrayOf(\n      PropTypes.shape({\n        log_strike: PropTypes.number.isRequired,\n        transformed_option: PropTypes.number.isRequired\n      })\n    )\n  }),\n  theme: PropTypes.shape({\n    palette: PropTypes.shape({\n      primary: PropTypes.shape({\n        main: PropTypes.string.isRequired\n      }).isRequired,\n      secondary: PropTypes.shape({\n        main: PropTypes.string.isRequired\n      }).isRequired\n    }).isRequired\n  }),\n  loadingSpline: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = ({ calibratorValues, loading }) => ({\n  spline: calibratorValues.spline,\n  loadingSpline: loading.splineChart\n})\n\nexport default connect(mapStateToProps)(SplineChart)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Typography from '@material-ui/core/Typography'\nimport PropTypes from 'prop-types'\nconst marginTop = { marginTop: 40 }\n//export for testing\nexport const convertArrayToParagraph = arr =>\n  arr.reduce((aggr, curr) => {\n    return [...(Array.isArray(aggr) ? aggr : [aggr]), ' or ', curr]\n  })\n\nconst WarningNoValues = ({ links }) => (\n  <Typography variant=\"headline\" gutterBottom style={marginTop}>\n    No data available! Check that{' '}\n    {convertArrayToParagraph(\n      links.map(({ to, label }) => (\n        <Link to={to} key={to}>\n          {label}\n        </Link>\n      ))\n    )}{' '}\n    has been filled in correctly!\n  </Typography>\n)\nWarningNoValues.propTypes = {\n  links: PropTypes.arrayOf(\n    PropTypes.shape({\n      to: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired\n    })\n  )\n}\nexport default WarningNoValues\n","import React from 'react'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport WarningNoValues from 'Components/utils/WarningNoValues'\nimport { connect } from 'react-redux'\nimport { FIXED_DECIMALS } from 'globals/constants'\nimport PropTypes from 'prop-types'\n//export for testing\nexport const MarketValueTable = ({ attributes, loadingSpline }) =>\n  loadingSpline && !attributes.asset ? null : attributes.asset ? (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>Asset Price</TableCell>\n          <TableCell>Risk Free Rate</TableCell>\n          <TableCell>Years to Maturity</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        <TableRow>\n          <TableCell>{attributes.asset.toFixed(FIXED_DECIMALS)}</TableCell>\n          <TableCell>{attributes.rate.toFixed(FIXED_DECIMALS)}</TableCell>\n          <TableCell>{attributes.maturity.toFixed(FIXED_DECIMALS)}</TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  ) : (\n    <WarningNoValues links={[{ to: '/tab/1', label: 'Market Prices' }]} />\n  )\nMarketValueTable.propTypes = {\n  attributes: PropTypes.shape({\n    asset: PropTypes.number,\n    rate: PropTypes.number,\n    maturity: PropTypes.number\n  }),\n  loadingSpline: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = ({ calibratorValues, loading }) => ({\n  attributes: calibratorValues.attributes,\n  loadingSpline: loading.splineChart\n})\n\nexport default connect(mapStateToProps)(MarketValueTable)\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { connect } from 'react-redux'\nimport ProgressBar from 'Components/utils/ProgressBar'\nimport { calibrateModel } from 'Actions/calibrator'\nimport {\n  outerStyleInline,\n  progressStyle,\n  PROGRESS_SIZE\n} from 'globals/progressStyles'\nimport PropTypes from 'prop-types'\n\nconst checkRequiredFields = ({ constraints, maturity, asset }) =>\n  constraints && maturity && asset\n\n//exported for testing\nexport const ButtonToCalibrate = ({ attributes, onClick, loadingCalibrate }) =>\n  checkRequiredFields(attributes) ? (\n    <div style={outerStyleInline}>\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={() => onClick(attributes)}\n        disabled={loadingCalibrate}\n        key=\"calibrate\"\n      >\n        Calibrate\n      </Button>\n      <ProgressBar\n        key=\"progress\"\n        size={PROGRESS_SIZE}\n        style={progressStyle}\n        loading={loadingCalibrate}\n      />\n    </div>\n  ) : null\nButtonToCalibrate.propTypes = {\n  attributes: PropTypes.object.isRequired,\n  loadingCalibrate: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = ({ calibratorValues, loading }) => ({\n  attributes: calibratorValues.attributes,\n  loadingCalibrate: loading.calibrate\n})\nconst mapDispatchToProps = dispatch => ({\n  onClick: calibrateModel(dispatch)\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ButtonToCalibrate)\n","import React from 'react'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport { connect } from 'react-redux'\nimport { FIXED_DECIMALS } from 'globals/constants'\nimport { isEmpty } from 'globals/utils'\nimport PropTypes from 'prop-types'\n//exported for testing\nexport const CalibratedValueTable = ({ calibrated }) =>\n  isEmpty(calibrated) ? null : (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>Variable</TableCell>\n          <TableCell>Value</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {Object.entries(calibrated).map(([key, value]) => (\n          <TableRow key={key}>\n            <TableCell>{key}</TableCell>\n            <TableCell>{value.toFixed(FIXED_DECIMALS)}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  )\n\nCalibratedValueTable.propTypes = {\n  calibrated: PropTypes.object.isRequired\n}\nconst mapStateToProps = ({ calibratorValues }) => ({\n  calibrated: calibratorValues.calibrated //CALIBRATED_PARAMETERS\n})\n\nexport default connect(mapStateToProps)(CalibratedValueTable)\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { isEmpty } from 'globals/utils'\n//exported for testing\nexport const ButtonToScreen3 = ({ calibrated, nextTabLink }) =>\n  isEmpty(calibrated) ? null : (\n    <Button\n      color=\"secondary\"\n      variant=\"contained\"\n      component={Link}\n      to={nextTabLink}\n    >\n      View Charts\n    </Button>\n  )\nButtonToScreen3.propTypes = {\n  calibrated: PropTypes.object.isRequired,\n  nextTabLink: PropTypes.string.isRequired\n}\nconst mapStateToProps = ({ calibratorValues }) => ({\n  calibrated: calibratorValues.calibrated\n})\nexport default connect(mapStateToProps)(ButtonToScreen3)\n","import React from 'react'\nimport { Grid, Row, Col } from 'react-flexbox-grid'\nimport SplineChart from './SplineChart'\nimport MarketValueTable from './MarketValueTable'\nimport ButtonToCalibrate from './ButtonToCalibrate'\nimport CalibratedValueTable from './CalibratedValueTable'\nimport ButtonNext from './ButtonToScreen3'\nconst marginBottom = { marginBottom: 50 }\nconst CalibrationScreen = () => (\n  <Grid fluid style={marginBottom}>\n    <Row>\n      <Col xs={12}>\n        <MarketValueTable />\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={12}>\n        <SplineChart />\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={12}>\n        <p>\n          The model will calibrate the characteristic function to approximate\n          the fitted spline above. The fit will be better when the option prices\n          have less arbitrage.\n        </p>\n        <ButtonToCalibrate />\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={12}>\n        <CalibratedValueTable />\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={12}>\n        <ButtonNext nextTabLink=\"/tab/3\" />\n      </Col>\n    </Row>\n  </Grid>\n)\nexport default CalibrationScreen\n","/**\n * https://sgvzefbvu0.execute-api.us-east-1.amazonaws.com/dev/calculator/{optionType}/{sensitivity} (POST)\n * https://sgvzefbvu0.execute-api.us-east-1.amazonaws.com/dev/density/{densityType} (POST)\n * https://sgvzefbvu0.execute-api.us-east-1.amazonaws.com/dev/parameters/parameter_ranges (GET)\n */\nimport { handleIV } from 'Services/inputHandler'\nimport { pFetch } from 'Services/urlUtils'\nimport {\n  DENSITY,\n  RISK_METRICS,\n  LOADING_DENSITY_CHART,\n  CALL,\n  PUT,\n  IV,\n  LOADING_PUT_CALL_IV_CHART\n} from './constants'\n\nconst mapTypeToAction = {\n  call: CALL,\n  put: PUT\n}\n\nconst getPricesAndIV = type => dispatch => ({ sensitivity, ...body }) => {\n  dispatch({\n    type: LOADING_PUT_CALL_IV_CHART,\n    value: true\n  })\n  dispatch({\n    type: mapTypeToAction[type],\n    value: []\n  })\n  return pFetch(`calculator/${type}/${sensitivity}`, body)\n    .then(results => {\n      if (handleIV(results)) {\n        dispatch({\n          type: IV,\n          value: results\n        })\n      }\n      return dispatch({\n        type: mapTypeToAction[type],\n        value: results\n      })\n    })\n    .finally(() => {\n      dispatch({\n        type: LOADING_PUT_CALL_IV_CHART,\n        value: false\n      })\n    })\n}\n\nexport const getPut = getPricesAndIV('put')\nexport const getCall = getPricesAndIV('call')\n\nconst gDensity = (type, densityType) => dispatch => body => {\n  dispatch({\n    type: LOADING_DENSITY_CHART,\n    value: true\n  })\n  return pFetch(`density/${densityType}`, body)\n    .then(results => {\n      return dispatch({\n        type,\n        value: results\n      })\n    })\n    .finally(() => {\n      dispatch({\n        type: LOADING_DENSITY_CHART,\n        value: false\n      })\n    })\n}\nexport const getDensity = gDensity(DENSITY, 'density')\nexport const getRiskMetrics = gDensity(RISK_METRICS, 'riskmetric')\n","export const handleIV = results => {\n  if (results.length === 0) {\n    return false\n  }\n  if (results[0].iv) {\n    return true\n  }\n  return false\n}\n","import React from 'react'\nimport {\n  VictoryChart,\n  VictoryLine,\n  VictoryContainer,\n  VictoryScatter,\n  VictoryLegend\n} from 'victory'\nimport { withTheme } from '@material-ui/core/styles'\nimport { connect } from 'react-redux'\nimport ProgressBar from 'Components/utils/ProgressBar'\nimport { containerStyle, animateStyle, titleStyle } from 'globals/chartStyles'\nimport {\n  outerStyleStandalone,\n  progressStyle,\n  PROGRESS_SIZE\n} from 'globals/progressStyles'\nimport PropTypes from 'prop-types'\n\n//exported for testing\nexport const PutCallChart = withTheme()(\n  ({ call, put, theme, strikes, prices, sensitivity, loadingPutCall }) => {\n    const scatter = strikes.map((v, index) => ({\n      strike: v,\n      price: prices[index]\n    }))\n    const legendData = (primary, secondary) => [\n      { name: 'Call', symbol: { fill: primary } },\n      { name: 'Put', symbol: { fill: secondary } }\n    ]\n    const { main: primary } = theme.palette.primary\n    const { main: secondary } = theme.palette.secondary\n    return call.length > 0 && put.length > 0 ? (\n      <VictoryChart\n        containerComponent={<VictoryContainer style={containerStyle} />}\n        animate={animateStyle}\n      >\n        <VictoryLegend\n          centerTitle\n          title=\"Calls and Puts\"\n          {...titleStyle}\n          data={legendData(primary, secondary)}\n          orientation=\"horizontal\"\n        />\n        <VictoryLine\n          style={{ data: { stroke: primary } }}\n          data={call}\n          x=\"at_point\"\n          interpolation=\"natural\"\n          y=\"value\"\n        />\n        <VictoryLine\n          style={{ data: { stroke: secondary } }}\n          data={put}\n          x=\"at_point\"\n          interpolation=\"natural\"\n          y=\"value\"\n        />\n        {sensitivity === 'price' && (\n          <VictoryScatter\n            style={{ data: { stroke: theme.palette.secondary.main } }}\n            data={scatter}\n            x=\"strike\"\n            interpolation=\"natural\"\n            y=\"price\"\n          />\n        )}\n      </VictoryChart>\n    ) : (\n      <div style={outerStyleStandalone}>\n        <ProgressBar\n          style={progressStyle}\n          size={PROGRESS_SIZE}\n          loading={loadingPutCall}\n        />\n      </div>\n    )\n  }\n)\nPutCallChart.propTypes = {\n  call: PropTypes.arrayOf(\n    PropTypes.shape({\n      at_point: PropTypes.number.isRequired,\n      value: PropTypes.number.isRequired\n    })\n  ),\n  put: PropTypes.arrayOf(\n    PropTypes.shape({\n      at_point: PropTypes.number.isRequired,\n      value: PropTypes.number.isRequired\n    })\n  ),\n  strikes: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n  prices: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n  loadingPutCall: PropTypes.bool.isRequired,\n  theme: PropTypes.shape({\n    palette: PropTypes.shape({\n      primary: PropTypes.shape({\n        main: PropTypes.string.isRequired\n      }).isRequired,\n      secondary: PropTypes.shape({\n        main: PropTypes.string.isRequired\n      }).isRequired\n    }).isRequired\n  }),\n  sensitivity: PropTypes.string.isRequired\n}\nconst mapStateToProps = ({ pricerValues, calibratorValues, loading }) => ({\n  call: pricerValues.call,\n  put: pricerValues.put,\n  strikes: calibratorValues.attributes.strikes,\n  prices: calibratorValues.attributes.prices,\n  loadingPutCall: loading.putCallIVChart\n})\n\nexport default connect(mapStateToProps)(PutCallChart)\n","import React from 'react'\nimport {\n  VictoryChart,\n  VictoryLine,\n  VictoryContainer,\n  VictoryLabel\n} from 'victory'\nimport ProgressBar from 'Components/utils/ProgressBar'\nimport { connect } from 'react-redux'\nimport { withTheme } from '@material-ui/core/styles'\nimport { containerStyle, animateStyle, titleStyle } from 'globals/chartStyles'\nimport { FIXED_DECIMALS } from 'globals/constants'\nimport {\n  outerStyleStandalone,\n  progressStyle,\n  PROGRESS_SIZE\n} from 'globals/progressStyles'\nimport PropTypes from 'prop-types'\n\n//exported for testing\nexport const getMax = (data, key) =>\n  data.reduce((aggr, cur) => {\n    return cur[key] > aggr ? cur[key] : aggr\n  }, Number.NEGATIVE_INFINITY)\n\n//exported for testing\nexport const getVaR = (riskMetrics, density) => [\n  {\n    x: -riskMetrics.value_at_risk,\n    y: 0\n  },\n  {\n    x: -riskMetrics.value_at_risk,\n    y: getMax(density, 'value')\n  }\n]\n//exported for testing\nexport const DensityChart = withTheme()(\n  ({ density, theme, riskMetrics, loadingDensity }) =>\n    density.length > 0 && riskMetrics.value_at_risk ? (\n      <VictoryChart\n        animate={animateStyle}\n        containerComponent={<VictoryContainer style={containerStyle} />}\n      >\n        <VictoryLabel\n          {...titleStyle}\n          x={53}\n          text={[\n            'Risk Neutral Density',\n            `Value at Risk: ${riskMetrics.value_at_risk.toFixed(\n              FIXED_DECIMALS\n            )}`,\n            `Expected Shortfall: ${riskMetrics.expected_shortfall.toFixed(\n              FIXED_DECIMALS\n            )}`\n          ]}\n        />\n        <VictoryLine\n          style={{ data: { stroke: theme.palette.primary.main } }}\n          data={density}\n          x=\"at_point\"\n          interpolation=\"natural\"\n          y=\"value\"\n        />\n        <VictoryLine\n          style={{ data: { stroke: theme.palette.secondary.main } }}\n          data={getVaR(riskMetrics, density)}\n        />\n      </VictoryChart>\n    ) : (\n      <div style={outerStyleStandalone}>\n        <ProgressBar\n          loading={loadingDensity}\n          style={progressStyle}\n          size={PROGRESS_SIZE}\n        />\n      </div>\n    )\n)\nDensityChart.propTypes = {\n  density: PropTypes.arrayOf(\n    PropTypes.shape({\n      at_point: PropTypes.number.isRequired,\n      value: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  riskMetrics: PropTypes.shape({\n    value_at_risk: PropTypes.number,\n    expected_shortfall: PropTypes.number\n  }).isRequired,\n  loadingDensity: PropTypes.bool.isRequired,\n  theme: PropTypes.shape({\n    palette: PropTypes.shape({\n      primary: PropTypes.shape({\n        main: PropTypes.string.isRequired\n      }).isRequired,\n      secondary: PropTypes.shape({\n        main: PropTypes.string.isRequired\n      }).isRequired\n    }).isRequired\n  })\n}\n\nconst mapStateToProps = ({ pricerValues, loading }) => ({\n  density: pricerValues.density,\n  riskMetrics: pricerValues.riskMetrics,\n  loadingDensity: loading.densityChart\n})\n\nexport default connect(mapStateToProps)(DensityChart)\n","import React from 'react'\nimport {\n  VictoryChart,\n  VictoryLine,\n  VictoryLabel,\n  VictoryContainer\n} from 'victory'\nimport ProgressBar from 'Components/utils/ProgressBar'\nimport { connect } from 'react-redux'\nimport { withTheme } from '@material-ui/core/styles'\nimport { containerStyle, animateStyle, titleStyle } from 'globals/chartStyles'\n\nimport {\n  outerStyleStandalone,\n  progressStyle,\n  PROGRESS_SIZE\n} from 'globals/progressStyles'\n\nimport PropTypes from 'prop-types'\n\n//exported for testing\nexport const ImpliedVolatilityChart = withTheme()(\n  ({ impliedVolatility, theme, loadingIV }) =>\n    impliedVolatility.length > 0 ? (\n      <VictoryChart\n        containerComponent={<VictoryContainer style={containerStyle} />}\n        animate={animateStyle}\n      >\n        <VictoryLabel {...titleStyle} text=\"Implied Volatility\" />\n        <VictoryLine\n          style={{ data: { stroke: theme.palette.primary.main } }}\n          data={impliedVolatility}\n          x=\"at_point\"\n          interpolation=\"natural\"\n          y=\"iv\"\n        />\n      </VictoryChart>\n    ) : (\n      <div style={outerStyleStandalone}>\n        <ProgressBar\n          style={progressStyle}\n          size={PROGRESS_SIZE}\n          loading={loadingIV}\n        />\n      </div>\n    )\n)\n\nImpliedVolatilityChart.propTypes = {\n  impliedVolatility: PropTypes.arrayOf(\n    PropTypes.shape({\n      at_point: PropTypes.number.isRequired,\n      iv: PropTypes.number.isRequired\n    })\n  ),\n  loadingIV: PropTypes.bool.isRequired,\n  theme: PropTypes.shape({\n    palette: PropTypes.shape({\n      primary: PropTypes.shape({\n        main: PropTypes.string.isRequired\n      }).isRequired,\n      secondary: PropTypes.shape({\n        main: PropTypes.string.isRequired\n      }).isRequired\n    }).isRequired\n  })\n}\n\nconst mapStateToProps = ({ pricerValues, loading }) => ({\n  impliedVolatility: pricerValues.impliedVolatility,\n  loadingIV: loading.putCallIVChart\n})\n\nexport default connect(mapStateToProps)(ImpliedVolatilityChart)\n","import React from 'react'\nimport { getCall, getPut, getDensity, getRiskMetrics } from 'Actions/pricer'\nimport { Grid, Row, Col } from 'react-flexbox-grid'\nimport { connect } from 'react-redux'\nimport PutCallChart from './PutCallChart'\nimport DensityChart from './DensityChart'\nimport ImpliedVolatilityChart from './ImpliedVolatilityChart'\nimport LoadData from 'Components/utils/LoadData'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport WarningNoValues from 'Components/utils/WarningNoValues'\nimport { isEmpty } from 'globals/utils'\nimport PropTypes from 'prop-types'\nimport { getBaseUrl } from 'Services/urlUtils'\n\nexport const sensitivities = [\n  { value: 'price', label: 'Price' },\n  { value: 'delta', label: 'Delta' },\n  { value: 'gamma', label: 'Gamma' },\n  { value: 'theta', label: 'Theta' }\n]\nconst handleChange = (match, history, updateOptions, attributes) => (\n  _,\n  value\n) => {\n  const { value: sensitivity } = sensitivities[value]\n  updateOptions({ ...attributes, sensitivity })\n  history.push(getBaseUrl(match) + sensitivity)\n}\n\n//exported for testing\nexport const SensitivityNav = ({\n  match,\n  history,\n  updateOptions,\n  attributes\n}) => (\n  <Tabs\n    value={sensitivities.findIndex(v => v.value === match.params.sensitivity)}\n    onChange={handleChange(match, history, updateOptions, attributes)}\n    fullWidth\n  >\n    {sensitivities.map(({ value, label }) => (\n      <Tab label={label} key={value} />\n    ))}\n  </Tabs>\n)\nSensitivityNav.propTypes = {\n  match: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    params: PropTypes.shape({\n      sensitivity: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  updateOptions: PropTypes.func.isRequired,\n  attributes: PropTypes.object.isRequired\n}\n//exported for testing\nexport const ChartsScreen = ({\n  onLoad,\n  attributes,\n  match,\n  history,\n  updateOptions,\n  calibrated\n}) =>\n  isEmpty(calibrated) ? (\n    <Grid fluid>\n      <Row>\n        <Col xs={12}>\n          <WarningNoValues\n            links={[\n              { to: '/tab/1', label: 'Market Prices' },\n              { to: '/tab/2', label: 'Calibration' }\n            ]}\n          />\n        </Col>\n      </Row>\n    </Grid>\n  ) : (\n    <LoadData\n      onLoad={onLoad}\n      attributes={attributes}\n      sensitivity={match.params.sensitivity}\n    >\n      <Grid fluid>\n        <Row>\n          <Col xs={12}>\n            <PutCallChart sensitivity={match.params.sensitivity} />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <SensitivityNav\n              match={match}\n              history={history}\n              attributes={attributes}\n              updateOptions={updateOptions}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <ImpliedVolatilityChart />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <DensityChart />\n          </Col>\n        </Row>\n      </Grid>\n    </LoadData>\n  )\nChartsScreen.propTypes = {\n  onLoad: PropTypes.func.isRequired,\n  attributes: PropTypes.object.isRequired,\n  match: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    params: PropTypes.shape({\n      sensitivity: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  updateOptions: PropTypes.func.isRequired,\n  calibrated: PropTypes.object.isRequired\n}\nconst mapStateToProps = ({ calibratorValues }) => ({\n  attributes: {\n    ...calibratorValues.attributes,\n    ...calibratorValues.calibrated\n  },\n  calibrated: calibratorValues.calibrated\n})\n\n//exported for testing\nexport const onLoad = dispatch => {\n  const getP = getPut(dispatch)\n  const getC = getCall(dispatch)\n  const getD = getDensity(dispatch)\n  const getR = getRiskMetrics(dispatch)\n  return ({ attributes, sensitivity }) => {\n    const objToSend = { ...attributes, sensitivity }\n    getP(objToSend)\n    getC(objToSend)\n    getD(attributes)\n    getR(attributes)\n  }\n}\n//export for testing\nexport const updateOptions = dispatch => {\n  const getP = getPut(dispatch)\n  const getC = getCall(dispatch)\n  return attributes => {\n    getP(attributes)\n    getC(attributes)\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onLoad: onLoad(dispatch),\n  updateOptions: updateOptions(dispatch)\n})\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChartsScreen)\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport { Route, Redirect, Switch } from 'react-router-dom'\nimport Screen1 from 'Components/Screen1'\nimport Screen2 from 'Components/Screen2'\nimport Screen3, { sensitivities } from 'Components/Screen3'\nimport { getBaseUrl } from 'Services/urlUtils'\n\nconst handleChange = (match, history) => (_, value) => {\n  history.push(getBaseUrl(match) + (value + 1))\n}\nconst AppBarInst = ({ match, history }) => (\n  <AppBar position=\"sticky\">\n    <Tabs\n      value={parseInt(match.params.tabId, 10) - 1}\n      onChange={handleChange(match, history)}\n      fullWidth\n    >\n      <Tab label=\"Market Options\" />\n      <Tab label=\"Calibration\" />\n      <Tab label=\"Charts and Graphs\" />\n    </Tabs>\n  </AppBar>\n)\n\nconst App = () => [\n  <Switch key=\"redirect\">\n    <Redirect key=\"redirectBegin\" from=\"/\" to=\"/tab/1\" exact />\n    <Redirect\n      key=\"redirectTab\"\n      from=\"/tab/3\"\n      to={`/tab/3/${sensitivities[0].value}`}\n      exact\n    />\n  </Switch>,\n  <Route\n    key=\"bannerroute\"\n    path=\"/tab/:tabId\"\n    render={props => <AppBarInst key=\"appbar\" {...props} />}\n  />,\n  <Route key=\"marketoptions\" path=\"/tab/1\" exact component={Screen1} />,\n  <Route key=\"calibration\" path=\"/tab/2\" component={Screen2} exact />,\n  <Route key=\"charts\" path=\"/tab/3/:sensitivity\" component={Screen3} exact />\n]\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { TICKER_VALUE, MATURITY_VALUE } from 'Actions/constants'\nimport { combineReducers } from 'redux'\n\nconst ticker = (state = '', action) => {\n  switch (action.type) {\n    case TICKER_VALUE:\n      return action.ticker\n    default:\n      return state\n  }\n}\nconst maturity = (state = '', action) => {\n  switch (action.type) {\n    case MATURITY_VALUE:\n      return action.maturity\n    case TICKER_VALUE:\n      return '' //reset\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  ticker,\n  maturity\n})\n","import { OPTION_MATURITIES, TICKERS, TICKER_VALUE } from 'Actions/constants'\n\nimport { combineReducers } from 'redux'\n\nconst maturities = (state = [], action) => {\n  switch (action.type) {\n    case OPTION_MATURITIES:\n      return action.maturities\n    case TICKER_VALUE:\n      return []\n    default:\n      return state\n  }\n}\n\nconst tickers = (state = [], action) => {\n  switch (action.type) {\n    case TICKERS:\n      return action.tickers\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  maturities,\n  tickers\n})\n","import {\n  SPLINE,\n  MARKET_VALUES,\n  CONSTRAINTS,\n  CALIBRATED_PARAMETERS,\n  TICKER_VALUE\n} from 'Actions/constants'\n\nimport { combineReducers } from 'redux'\nimport { getAboveEpsilon, getSymmetricFromRight } from 'globals/utils'\nconst epsilon = 0.00001\n\nconst getOnlyAboveZero = getAboveEpsilon(0)\n\n//exported for testing purposes\nexport const spline = (state = {}, action) => {\n  switch (action.type) {\n    case SPLINE:\n      return {\n        curve: getSymmetricFromRight(\n          'log_strike',\n          'transformed_option',\n          action.spline.curve,\n          epsilon\n        ),\n        points: getOnlyAboveZero(action.spline.points, 'transformed_option')\n      }\n    case TICKER_VALUE: //reset\n      return {}\n    default:\n      return state\n  }\n}\n\n//only include constraints which need to be calibrated for\nconst attributesToCalibrate = [\n  'lambda',\n  'mu_l',\n  'sig_l',\n  'sigma',\n  'v0',\n  'speed',\n  'eta_v',\n  'rho'\n]\nconst defaultAttributes = {\n  num_u: 8,\n  quantile: 0.01,\n  prices: [],\n  strikes: []\n}\n\n//export for testing\nexport const attributes = (state = defaultAttributes, action) => {\n  switch (action.type) {\n    case MARKET_VALUES:\n      return { ...state, ...action.attributes }\n    case CONSTRAINTS:\n      return {\n        ...state,\n        constraints: attributesToCalibrate.reduce(\n          (aggr, curr) => ({\n            ...aggr,\n            [curr]: action.constraints[curr]\n          }),\n          {}\n        )\n      }\n    case TICKER_VALUE: //reset\n      const { constraints } = state\n      return { ...defaultAttributes, constraints }\n    default:\n      return state\n  }\n}\n\nconst calibrated = (state = {}, action) => {\n  switch (action.type) {\n    case CALIBRATED_PARAMETERS:\n      return action.parameters\n    case TICKER_VALUE: //reset\n      return {}\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  spline,\n  attributes,\n  calibrated\n})\n","import { RISK_METRICS, DENSITY, CALL, PUT, IV } from 'Actions/constants'\n\nimport { combineReducers } from 'redux'\n\n//exported for testing\nexport const rBoiler = (type, defaultState = []) => (\n  state = defaultState,\n  action\n) => {\n  switch (action.type) {\n    case type:\n      return action.value\n    default:\n      return state\n  }\n}\nconst call = rBoiler(CALL)\nconst put = rBoiler(PUT)\nconst impliedVolatility = rBoiler(IV)\nconst riskMetrics = rBoiler(RISK_METRICS, {})\nconst density = rBoiler(DENSITY)\n\nexport default combineReducers({\n  call,\n  put,\n  impliedVolatility,\n  riskMetrics,\n  density\n})\n","import {\n  LOADING_MATURITY,\n  LOADING_TICKER,\n  LOADING_CALIBRATE,\n  LOADING_DENSITY_CHART,\n  LOADING_PUT_CALL_IV_CHART,\n  LOADING_SPLINE\n} from 'Actions/constants'\nimport { combineReducers } from 'redux'\n\nconst loadingGenerator = (type, defaultState = false) => (\n  state = defaultState,\n  action\n) => {\n  switch (action.type) {\n    case type:\n      return action.value\n    default:\n      return state\n  }\n}\n\nconst maturity = loadingGenerator(LOADING_MATURITY)\nconst ticker = loadingGenerator(LOADING_TICKER)\nconst calibrate = loadingGenerator(LOADING_CALIBRATE)\nconst putCallIVChart = loadingGenerator(LOADING_PUT_CALL_IV_CHART)\nconst densityChart = loadingGenerator(LOADING_DENSITY_CHART)\nconst splineChart = loadingGenerator(LOADING_SPLINE)\n\nexport default combineReducers({\n  ticker,\n  maturity,\n  calibrate,\n  densityChart,\n  putCallIVChart,\n  splineChart\n})\n","import { combineReducers } from 'redux'\nimport inputs from './inputs'\nimport marketValues from './marketValues'\nimport calibratorValues from './calibratorValues'\nimport pricerValues from './pricerValues'\nimport loading from './loading'\nexport default combineReducers({\n  inputs,\n  marketValues,\n  calibratorValues,\n  pricerValues,\n  loading\n})\n","import indigo from '@material-ui/core/colors/indigo'\nimport amber from '@material-ui/core/colors/amber'\nexport default {\n  palette: {\n    primary: indigo,\n    secondary: amber\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport 'typeface-roboto'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducer from 'Reducers'\nimport { HashRouter as Router } from 'react-router-dom'\nimport defaultTheme from 'Themes'\n\nconst store = createStore(reducer)\n\nconst theme = createMuiTheme(defaultTheme)\nReactDOM.render(\n  <Provider store={store}>\n    <MuiThemeProvider theme={theme}>\n      <Router>\n        <App />\n      </Router>\n    </MuiThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n)\nregisterServiceWorker()\n"],"sourceRoot":""}